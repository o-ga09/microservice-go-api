openapi: 3.0.0
info:
  title: Micro Service API
  description: Zenn Bookの「Go言語でgRPCでつくるREST API開発 2024年版」のAPIスペックです。
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: ローカル環境
paths:
  /health:
    get:
      summary: ヘルスチェックエンドポイント
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                Message: OK
  /health/deep:
    get:
      summary: DBヘルスチェックエンドポイント
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                Message: DB OK
  /signup:
    get:
      tags:
        - "Auth"
      summary: 認証サービスのユーザー登録エンドポイント
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                $ref: "#/components/schemas/user"
        "403":
          description: Not Authorized
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_UNAUTHORIZED"
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_INTERNAL_SERVER_ERROR"
  /signin:
    get:
      tags:
        - "Auth"
      summary: 認証サービスのログインエンドポイント
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
               $ref: "#/components/schemas/user"
        "403":
          description: Not Authorized
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_UNAUTHORIZED"
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_INTERNAL_SERVER_ERROR"
  /signout:
    get:
      tags:
        - "Auth"
      summary: 認証サービスのログアウトエンドポイント
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                $ref: "#/components/schemas/user"
        "403":
          description: Not Authorized
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_UNAUTHORIZED"
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_INTERNAL_SERVER_ERROR"
  /checkin/{user_id}:
    post:
      tags:
        - "Entrance"
      summary: ユーザーがチェックインするエンドポイント
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestuser"
      responses:
        "200":
          description: チェックイン完了
          content:
            application/json:
              example:
                $ref: "#/components/schemas/entry"
        "403":
          description: Not Authorized
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_UNAUTHORIZED"
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_INTERNAL_SERVER_ERROR"
  /checkout/{user_id}:
    post:
      tags:
        - "Entrance"
      summary: ユーザーがチェックアウトするエンドポイント
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestuser"
      responses:
        "200":
          description: チェックアウト完了
          content:
            application/json:
              example:
                $ref: "#/components/schemas/entry"
        "403":
          description: Not Authorized
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_UNAUTHORIZED"
        "500":
          description: Internal Server Error
          content:
            application/json:
              example:
                $ref: "#/components/schemas/ERR_INTERNAL_SERVER_ERROR"
components:
  schemas:
    user:
      type: object
      properties:
        user_id:
          type: integer
          description: ユーザーID
        user_name:
          type: string
          description: ユーザー名
        user_email:
          type: string
          description: メールアドレス
        user_token:
          type: string
          description: ユーザートークン
    entry:
      type: object
      properties:
        user_id:
          type: integer
          description: ユーザーID
        user_name:
          type: string
          description: ユーザー名
        user_email:
          type: string
          description: メールアドレス
        paymentmethod:
          type: string
          description: 支払い方法
        checkin_time:
          type: string
          description: チェックイン時間
        checkout_time:
          type: string
          description: チェックアウト時間
        user_token:
          type: string
          description: ユーザートークン
    requestuser:
      type: object
      properties:
        name:
          type: string
          description: ユーザー名
        email:
          type: string
          description: メールアドレス
        password:
          type: string
          description: パスワード
    ERR_NOT_FOUND:
      type: object
      properties:
        Code:
          type: integer
          description: エラーコード
        Message:
          type: string
          description: メッセージ
    ERR_BAD_REQUEST:
      type: object
      properties:
        Code:
          type: integer
          description: エラーコード
        Message:
          type: string
          description: メッセージ
    ERR_INTERNAL_SERVER_ERROR:
      type: object
      properties:
        Code:
          type: integer
          description: エラーコード
        Message:
          type: string
          description: メッセージ
    ERR_UNAUTHORIZED:
      type: object
      properties:
        Code:
          type: integer
          description: エラーコード
        Message:
          type: string
          description: メッセージ
